{"remainingRequest":"/Users/zhangfan/dav/payment/portal/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zhangfan/dav/payment/portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhangfan/dav/payment/portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangfan/dav/payment/portal/src/components/layout/Footer.vue?vue&type=template&id=3d302860&","dependencies":[{"path":"/Users/zhangfan/dav/payment/portal/src/components/layout/Footer.vue","mtime":1606792154606},{"path":"/Users/zhangfan/dav/payment/portal/node_modules/cache-loader/dist/cjs.js","mtime":1606620389421},{"path":"/Users/zhangfan/dav/payment/portal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1606620394482},{"path":"/Users/zhangfan/dav/payment/portal/node_modules/cache-loader/dist/cjs.js","mtime":1606620389421},{"path":"/Users/zhangfan/dav/payment/portal/node_modules/vue-loader/lib/index.js","mtime":1606620394482}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}